pipeline {
  agent {
    docker {
      image 'javeriyasdocker/spring-boot-app:version1' // Reference your Docker image
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // Required to use the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo "Code Checkout Successful"'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // Assuming no build is needed since the image already contains the app
        sh 'echo "Using pre-built Docker image: javeriyasdocker/spring-boot-app:version1"'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://your-sonarqube-url" //need to change it
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
              echo "Skipping SonarQube analysis since the image is pre-built."
              echo "Modify this step if code analysis is still required."
          '''
        }
      }
    }
    stage('Push Docker Image') {
      environment {
        DOCKER_IMAGE = "javeriyasdocker/spring-boot-app:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
          docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
            sh 'docker tag javeriyasdocker/spring-boot-app:version1 ${DOCKER_IMAGE}' // Tagging with BUILD_NUMBER
            sh 'docker push ${DOCKER_IMAGE}' // Pushing the updated tag to DockerHub
          }
        }
      }
    }
    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "your-repo-name"
        GIT_USER_NAME = "your-github-username"
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
              git config user.email "your-email@example.com"
              git config user.name "Your Name"
              sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" springbootapp/deployment.yml
              git add springbootapp/deployment.yml
              git commit -m "Update deployment image to version ${BUILD_NUMBER}"
              git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}

// pipeline {
//   agent {
//     docker {
//       image 'abhishekf5/maven-abhishek-docker-agent:v1'
//       args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
//     }
//   }
//   stages {
//     stage('Checkout') {
//       steps {
//         sh 'echo passed'
//         //git branch: 'main', url: 'https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
//       }
//     }
//     stage('Build and Test') {
//       steps {
//         sh 'ls -ltr'
//         // build the project and create a JAR file
//         sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
//       }
//     }
//     stage('Static Code Analysis') {
//       environment {
//         SONAR_URL = "http://34.201.116.83:9000"
//       }
//       steps {
//         withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
//           sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
//         }
//       }
//     }
//     stage('Build and Push Docker Image') {
//       environment {
//         DOCKER_IMAGE = "abhishekf5/ultimate-cicd:${BUILD_NUMBER}"
//         // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
//         REGISTRY_CREDENTIALS = credentials('docker-cred')
//       }
//       steps {
//         script {
//             sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
//             def dockerImage = docker.image("${DOCKER_IMAGE}")
//             docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
//                 dockerImage.push()
//             }
//         }
//       }
//     }
//     stage('Update Deployment File') {
//         environment {
//             GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
//             GIT_USER_NAME = "iam-veeramalla"
//         }
//         steps {
//             withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
//                 sh '''
//                     git config user.email "abhishek.xyz@gmail.com"
//                     git config user.name "Abhishek Veeramalla"
//                     BUILD_NUMBER=${BUILD_NUMBER}
//                     sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
//                     git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
//                     git commit -m "Update deployment image to version ${BUILD_NUMBER}"
//                     git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
//                 '''
//             }
//         }
//     }
//   }
// }
