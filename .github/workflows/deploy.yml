name: Deploy to EKS

on:
  push:
    branches:
      - main

jobs:
  code_checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Upload code artifact
        uses: actions/upload-artifact@v3 
        with:
          name: source-code 
          path: . 

  maven_build:
    runs-on: ubuntu-latest
    needs: code_checkout
    steps:
      - name: Download code artifact
        uses: actions/download-artifact@v3
        with:
          name: source-code
          path: .

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build and package
        run: mvn clean package

  docker_build_and_push:
    runs-on: ubuntu-latest
    needs: maven_build
    steps:
      - name: Download code artifact
        uses: actions/download-artifact@v3
        with:
          name: source-code
          path: .

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t javeriyasdocker/my-ultimate-cicd:${{ github.run_id }} .
          docker push javeriyasdocker/my-ultimate-cicd:${{ github.run_id }}

  deploy_to_eks:
    runs-on: ubuntu-latest
    needs: docker_build_and_push
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region us-east-1 --name spring-boot-cluster1

      # - name: Delete existing deployments and services
      #   run: |
      #     kubectl delete deployment spring-boot-app 
      #     kubectl delete service spring-boot-app

      - name: Deploy to EKS
        run: |
          kubectl apply -f spring-boot-app-manifests/deployment.yml
          kubectl apply -f spring-boot-app-manifests/service.yml